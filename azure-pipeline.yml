trigger:
- main
pool:
  name: Default
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.13.1'
  displayName: 'Install Node.js'

- script: |
    npm install --save-dev @angular-devkit/build-angular
    npm install -g @angular/cli
    npm install
  displayName: 'Install dependencies'
  
- task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Check build output in great detail
        echo "Build output inspection:"
        echo "Current directory:"
        dir
        
        # Check for dist directory
        if (Test-Path dist) {
          echo "Dist directory exists:"
          dir dist
          # Check for pfefrontend subdirectory
          if (Test-Path dist/pfefrontend) {
            echo "pfefrontend directory exists:"
            dir dist/pfefrontend
          } else {
            echo "WARNING: dist exists but pfefrontend subdirectory not found"
            echo "Contents of dist:"
            dir dist
          }
        } else {
          echo "WARNING: dist directory not found"
          echo "Looking for any output directories:"
          dir /s /b | findstr dist
        }
    displayName: 'Inspect Build Output'
    condition: succeededOrFailed()
  
  # Publish the build artifacts - adjusted to handle either location
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Determine the correct path to publish
        $distPath = "dist/pfefrontend"
        if (Test-Path $distPath) {
          echo "Publishing from expected path: $distPath"
        } elseif (Test-Path "dist") {
          # Find the first directory in dist
          $firstDir = Get-ChildItem -Path "dist" -Directory | Select-Object -First 1
          if ($firstDir) {
            $distPath = "dist/$($firstDir.Name)"
            echo "Publishing from alternate path: $distPath"
          } else {
            echo "Publishing from dist directory itself"
            $distPath = "dist"
          }
        } else {
          echo "ERROR: Cannot find build output directory"
          exit 1
        }
        
        # Create variable for publish task
        Write-Host "##vso[task.setvariable variable=PublishPath]$distPath"
    displayName: 'Determine Publish Path'
    condition: succeededOrFailed()
# First, let's check what directories exist to debug the issue
- script: |
    echo "Workspace directory contents:"
    ls -la
    echo "Angular.json configuration:"
    cat angular.json | grep -A 10 \"outputPath\"
  displayName: 'Debug directory structure'

- script: |
    npm run build -- --configuration=production
    echo "Build output directories:"
    ls -la dist
  displayName: 'Build Angular app (production)'

# Modified to be more flexible with the output path
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive Angular build output'

# DÃ©ploiement vers Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'azure-connection-pfe'
    appName: 'pfe-frontend-app'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
  displayName: 'Deploy Angular app to Azure Web App'
